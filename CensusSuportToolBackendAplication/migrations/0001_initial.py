# Generated by Django 5.0.6 on 2024-05-08 16:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CensusTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('is_published', models.BooleanField(default=False)),
                ('categories', models.ManyToManyField(to='CensusSuportToolBackendAplication.category')),
            ],
        ),
        migrations.CreateModel(
            name='CensusRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completion_status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('census_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CensusSuportToolBackendAplication.censustemplate')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CensusSuportToolBackendAplication.community')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('SU', 'Selección única'), ('SM', 'Selección múltiple'), ('CB', 'Casillas de verificación'), ('TC', 'Texto corto'), ('TL', 'Texto largo'), ('D', 'Fecha'), ('H', 'Hora'), ('L', 'Escala Likert')], max_length=2)),
                ('text', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CensusSuportToolBackendAplication.category')),
            ],
        ),
        migrations.CreateModel(
            name='CensusResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField()),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CensusSuportToolBackendAplication.censusrecord')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CensusSuportToolBackendAplication.question')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CensusSuportToolBackendAplication.community')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('AG', 'Administrador Global'), ('AC', 'Administrador de Comunidades'), ('V', 'Voluntario')], max_length=2)),
                ('phone', models.CharField(max_length=20)),
                ('profession', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(related_name='custom_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='custom_user_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PermissionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='Pending', max_length=10)),
                ('census_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CensusSuportToolBackendAplication.censustemplate')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CensusSuportToolBackendAplication.community')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CensusSuportToolBackendAplication.user')),
            ],
        ),
        migrations.AddField(
            model_name='community',
            name='administrators',
            field=models.ManyToManyField(related_name='communities_administered', to='CensusSuportToolBackendAplication.user'),
        ),
        migrations.AddField(
            model_name='censustemplate',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CensusSuportToolBackendAplication.user'),
        ),
        migrations.AddField(
            model_name='censusrecord',
            name='volunteer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CensusSuportToolBackendAplication.user'),
        ),
    ]
